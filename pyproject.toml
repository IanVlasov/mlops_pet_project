[tool.poetry]
name = "mlops-pet"
version = "0.1.0"
description = ""
readme = "README.md"
authors = ["Yan Vlasov <vlasov.yan.ed@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
scipy = "^1.9.1"
pandas = "^1.4.4"
scikit-learn = "^1.1.2"
hyperopt = "^0.2.7"
typer = "^0.6.1"
fastparquet = "^0.8.3"

# Optional
aws-cdk-lib = {version = "^2.40.0", optional = true}
constructs = {version = "^10.1.94", optional = true}
exceptiongroup = {version = "^1.0.0-rc.9", optional = true}
mlflow = {version = "^1.28.0", optional = true}
boto3 = {version = "^1.24.66", optional = true}
prefect = {version = "^2.3.1", optional = true}
greenlet = {version = "^1.1.3", optional = true}
localstack = {version = "^1.1.0", optional = true}
PyMySQL = {version = "^1.0.2", optional = true}
matplotlib = {version = "^3.5.3", optional = true}
jupyter = {version = "^1.0.0", optional = true}
deepdiff = {version = "^5.8.1", optional = true}

[tool.poetry.extras]
tests = [
    "mlflow",
    "boto3",
    "prefect",
    "greenlet",
    "localstack",
    "PyMySQL",
    "deepdiff"
]
deployment = ["aws-cdk-lib", "constructs", "exceptiongroup"]
eda = ["jupyter", "matplotlib"]

[tool.poetry.dev-dependencies]
bandit = "^1.7.1"
black = {version = "^22.6.0", allow-prereleases = true}
darglint = "^1.8.1"
isort = {extras = ["colors"], version = "^5.10.1"}
mypy = "^0.971"
mypy-extensions = "^0.4.3"
pre-commit = "^2.15.0"
pydocstyle = "^6.1.1"
pylint = "^2.11.1"
pytest = "^6.2.4"
pyupgrade = "^2.29.1"
safety = "^2.1.1"
coverage = "^6.1.2"
coverage-badge = "^1.1.0"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"

[tool.poetry.scripts]
mlops_pet = "mlops_pet.cli:main"
integration-test-script = "tests.integration.scripts.test_infrastructure:test_infrastructure"
test-lambda = "tests.integration.scripts.test_lambda:test_lambda"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--durations=0",
  "--strict-markers",
  "--doctest-modules",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::UserWarning",
]
log_cli = "True"
minversion = "6.0"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
    "pragma: nocover",
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "if __name__ == .__main__.:",
]

[tool.black]
# https://github.com/psf/black
target-version = ["py310"]
line-length = 100
color = true
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 310
line_length = 100
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
profile = "black"
include_trailing_comma = true
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
pretty = true
show_traceback = true
color_output = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.messages_control]
disable = [
    "missing-function-docstring",
    "missing-final-newline",
    "missing-class-docstring",
    "missing-module-docstring",
    "invalid-name",
    "too-few-public-methods"
]
